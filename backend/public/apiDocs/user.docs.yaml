tags:
  name: USER
  description: 유저 정보 API

paths:
  /user/nickname:
    put:
      summary: 닉네임 변경
      tags: [USER]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 닉네임 변경 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 201
                  message:
                    type: string
                    default: nickname modification success
                  datas:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newNickname:
                  type: string

  /user/password:
    put:
      summary: 비밀번호 변경
      tags: [USER]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 비밀번호 변경 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 201
                  message:
                    type: string
                    default: Password modification success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
  
  /user/profpic:
    put:
      summary: 프로필 사진 변경
      tags: [USER]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 프로필 사진 변경 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 201
                  message:
                    type: string
                    default: Profile picture modification success
                  datas:
                    type: object
                    default: { profileUrl: /// }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: string
                  default: 파일 전송 받은 뒤 location

  /user/description:
    put:
      summary: 자기소개 변경
      tags: [USER]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 자기소개 변경 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 201
                  message:
                    type: string
                    default: description modification success
                  datas:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newDescription:
                  type: string

  /user/userinfo/{userId}:
    get:
      summary: 유저 모든 데이터 조회
      tags: [USER]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 유저 데이터 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 200
                  message:
                    type: string
                    default: success getting user all datas
                  datas:
                    type: object

  /user/channelhistory:
    get:
      summary: 채널 히스토리 조회
      tags: [USER]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 채널 히스토리 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 201
                  message:
                    type: string
                    default: Get channel history success
                  datas:
                    type: object

  /user/validation/duplication/email/{email}:
    get:
      summary: 이메일 중복 검사
      tags: [USER]
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 이메일 중복 검사 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 200
                  message:
                    type: string
                    default: available email

  /user/validation/duplication/nickname/{nickname}:
    get:
      summary: 닉네임 중복 검사
      tags: [USER]
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 닉네임 중복 검사 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  status:
                    type: integer
                    default: 200
                  message:
                    type: string
                    default: available nickname